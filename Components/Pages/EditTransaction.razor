@page "/edit-transaction/{TransactionId:int}"
@using Pennywise.Model;
@using Pennywise.Services.Interfaces;
@inject ITransactionService TransactionService
@inject NavigationManager Nav

<h3>Edit Transaction</h3>

@if (transaction == null)
{
            <p>Loading...</p>
}
else
{
            <form>
                <label>Title:</label>
                <input @bind="transaction.Title" />
                <label>Amount:</label>
                <input type="number" @bind="transaction.Amount" />
                <label>Type:</label>
                <!-- Make transaction type readonly -->
                <input value="@transaction.Type" readonly style="background-color: #f9f9f9; border: none;" />
                <label>Date:</label>
                <input type="date" @bind="transaction.Date" />
                <label>Tags:</label>
                <input @bind="transaction.Tags" />
                <label>Note:</label>
                <textarea @bind="transaction.Note"></textarea>
                <button type="button" @onclick="SaveTransaction">Save</button>
                <button type="button" @onclick="Cancel">Cancel</button>
            </form>
}

@code {
    [Parameter]
    public int TransactionId { get; set; }

    private Transaction transaction;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var transactions = await TransactionService.LoadTransactionsAsync();
            transaction = transactions.FirstOrDefault(t => t.TransactionId == TransactionId);

            if (transaction == null)
            {
                Nav.NavigateTo("/transactions"); // Redirect if not found
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading transaction: {ex.Message}");
        }
    }

    private async Task SaveTransaction()
    {
        try
        {
            await TransactionService.SaveTransactionAsync(transaction);
            Nav.NavigateTo("/transactions"); // Redirect to the transactions page
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving transaction: {ex.Message}");
        }
    }

    private void Cancel()
    {
        Nav.NavigateTo("/transactions");
    }
}
